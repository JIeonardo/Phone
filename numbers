import sys
from PyQt5.QtWidgets import (QApplication, QWidget, QLabel, QLineEdit,
                             QPushButton, QFileDialog, QVBoxLayout)
from PyQt5.QtGui import QIcon
import openpyxl

def process_numbers(wb):
    ws = wb['List1']

    error_count = 0  # Счетчик ошибок

    # Удаляем пустые строки
    current_row = ws.max_row
    while current_row >= 2:
        if ws.cell(row=current_row, column=1).value is None:
            ws.delete_rows(current_row, 1)
            current_row -= 1  # Сдвигаем индекс, если строка удалена
        current_row -= 1

    # Удаляем дубликаты
    seen_numbers = set()
    current_row = 2
    while current_row <= ws.max_row:
        phone_number = ws.cell(row=current_row, column=1).value
        if phone_number and phone_number not in seen_numbers:
            seen_numbers.add(phone_number)
            current_row += 1
        else:
            ws.delete_rows(current_row, 1)

    # Обрабатываем номера
    current_row = 2  # Начинаем со второй строки
    while current_row <= ws.max_row:
        cell = ws.cell(row=current_row, column=1)  # Получаем ячейку
        phone_number = cell.value
        if phone_number:
            phone_number = str(phone_number)
            # Удаляем нежелательные символы из номера
            phone_number = phone_number.replace("+", "").replace("(", "").replace(")", "").replace("-", "").replace(" ", "")
            # Заменяем "8" на "7", если номер начинается с "8"
            if phone_number.startswith("8"):
                phone_number = "7" + phone_number[1:]

            # Проверяем длину номера без разделения
            if len(phone_number) < 10:
                # Удаляем номер, если он меньше 10 символов
                error_count += 1  # Увеличиваем счетчик ошибок
                ws.cell(row=current_row, column=3).value = f"Ошибка: неверная длина номера: {phone_number}"
                ws.delete_rows(current_row, 1)  # Удаляем строку
                current_row -= 1  # Сдвигаем индекс, если строка удалена
            else:
                # Разделяем номера по запятым
                while ',' in phone_number:
                    numbers = phone_number.split(',')
                    numbers = [num.strip() for num in numbers if num]  # Удаляем пустые элементы

                    # Обрабатываем каждый полученный номер
                    for i, num in enumerate(numbers):
                        if len(num) < 10:
                            # Удаляем номер, если он меньше 10 символов
                            error_count += 1  # Увеличиваем счетчик ошибок
                            ws.cell(row=current_row + i, column=3).value = f"Ошибка: неверная длина номера: {num}"
                            ws.delete_rows(current_row + i, 1)  # Удаляем строку
                            current_row -= 1  # Сдвигаем индекс, если строка удалена
                        else:
                            # Создаем новую строку для номера, если он больше 10 символов
                            ws.insert_rows(current_row + i + 1, 1)
                            ws.cell(row=current_row + i + 1, column=1).value = num
                            current_row += 1

                    phone_number = numbers[0]  # Переходим к следующему номеру в цикле

                # Удаляем буквы из номера
                phone_number = ''.join(filter(str.isdigit, phone_number))

                # Записываем номер в ячейку
                cell.value = phone_number
                current_row += 1
        else:
            current_row += 1

    return error_count

wb = openpyxl.load_workbook("TestExcel.xlsx")

# Повторяем обработку до тех пор, пока не будет найдено ошибок
while True:
    error_count = process_numbers(wb)
    if error_count == 0:
        break

wb.save("TestExcel.xlsx")
print("Файл обновлен!")
print(f"Найдено {error_count} ошибок.")

class MainWindow(QWidget):
    def __init__(self):
        super().__init__()

        self.setWindowTitle("Обработка Excel файлов")
        self.setWindowIcon(QIcon("path/to/your/icon.png"))  # Установите иконку

        # Создайте элементы интерфейса
        self.file_label = QLabel("Выберите Excel файл:")
        self.file_path = QLineEdit()
        self.file_path.setReadOnly(True)  # Запретить редактирование
        self.browse_button = QPushButton("Обзор")
        self.browse_button.clicked.connect(self.open_file)

        self.process_button = QPushButton("Обработать")
        self.process_button.clicked.connect(self.process_data)

        # Разместите элементы в макете
        layout = QVBoxLayout()
        layout.addWidget(self.file_label)
        layout.addWidget(self.file_path)
        layout.addWidget(self.browse_button)
        layout.addWidget(self.process_button)

        self.setLayout(layout)

    def open_file(self):
        options = QFileDialog.Options()
        options |= QFileDialog.DontUseNativeDialog
        file_name, _ = QFileDialog.getOpenFileName(
            self, "Выберите файл Excel", "", "Excel Files (*.xlsx *.xls)", options=options)
        if file_name:
            self.file_path.setText(file_name)

    def process_data(self):
        file_path = self.file_path.text()
        if file_path:
            try:
                wb = openpyxl.load_workbook(file_path)
                process_numbers(wb)  # Вызываем вашу функцию
                # ... (добавить сообщения об успешной обработке)
            except Exception as e:
                # ... (обработать исключение, например, показать сообщение об ошибке)
                print(f"Ошибка при обработке файла: {e}")

if __name__ == "__main__":
    app = QApplication(sys.argv)
    window = MainWindow()
    window.show()
    sys.exit(app.exec_())
